diff --git a/src/app/job-details/[id]/page.tsx b/src/app/job-details/[id]/page.tsx
index 84eb13a..9f69a63 100644
--- a/src/app/job-details/[id]/page.tsx
+++ b/src/app/job-details/[id]/page.tsx
@@ -1,5 +1,5 @@
 import { getJobById } from "@/api/requests";
-import LikeButtonContainer from "@/ui/likeButton/LikeButtonContainer";
+import LikeButtonContainer from "@/components/likeButton/LikeButtonContainer";
 import Image from "next/image";
 import React from "react";
 
diff --git a/src/components/jobsSearch/JobSearchContainer.tsx b/src/components/jobsSearch/JobSearchContainer.tsx
index 0a94227..ca3e5bb 100644
--- a/src/components/jobsSearch/JobSearchContainer.tsx
+++ b/src/components/jobsSearch/JobSearchContainer.tsx
@@ -42,7 +42,7 @@ const JobSearchContainer = () => {
       {userDataState?.desiredJobTitle || jobs ? (
         <Jobs jobs={jobs} isLoading={isLoading} />
       ) : (
-        <NoRecomendations />
+        <NoRecomendations isUserLogged={!!userDataState}/>
       )}
     </>
   );
diff --git a/src/components/jobsSearch/NoRecomendations.tsx b/src/components/jobsSearch/NoRecomendations.tsx
index 2cadfaa..df58cdb 100644
--- a/src/components/jobsSearch/NoRecomendations.tsx
+++ b/src/components/jobsSearch/NoRecomendations.tsx
@@ -1,12 +1,34 @@
 import Link from "next/link";
 
-const NoRecomendations = () => {
+export interface NoRecomendationsProps {
+  isUserLogged: boolean;
+}
+
+const NoRecomendations = ({ isUserLogged }: NoRecomendationsProps) => {
   return (
     <div>
-      <h3 className="text-2xl font-bold">There is no recomendations</h3>
-      <p>
-        To get job recomendations please update or create profile 
-      </p>
+      <h3 className="text-2xl font-bold text-center">There is no recomendations</h3>
+      {isUserLogged ? (
+        <p>
+          To get job recomendations please update your&nbsp;
+          <Link
+            className="underline text-blue-500 hover:text-blue-600 active:text-blue-800 visited:text-purple-600 transition ease-in-out delay-100"
+            href="/profile"
+          >
+            profile
+          </Link>
+        </p>
+      ) : (
+        <p>
+          To get job recomendations please&nbsp;
+          <Link
+            className="underline text-blue-500 hover:text-blue-600 active:text-blue-800 visited:text-purple-600 transition ease-in-out delay-100"
+            href="/login"
+          >
+            login or create account
+          </Link>
+        </p>
+      )}
     </div>
   );
 };
diff --git a/src/context/index.tsx b/src/context/index.tsx
index 80b8312..fb1f42a 100644
--- a/src/context/index.tsx
+++ b/src/context/index.tsx
@@ -1,16 +1,11 @@
 "use client";
 
-import {
-  useContext,
-  useReducer,
-  useEffect
-} from "react";
+import { useContext, useReducer, useEffect } from "react";
 import { reducer } from "./reducer";
 import { AppContext, INITIAL_STATE } from "./context";
 import { getUserDataFromStorage } from "@/lib/helpers/authHelper";
 import { UserData } from "@/lib/models";
 
-
 export function AppWrapper({ children }: { children: React.ReactNode }) {
   const [state, dispatch] = useReducer(reducer, INITIAL_STATE);
 
@@ -18,26 +13,26 @@ export function AppWrapper({ children }: { children: React.ReactNode }) {
     dispatch({
       type: "userDataState",
       payload: {
-        userDataState: value
-      }
-    })
-  }
+        userDataState: value,
+      },
+    });
+  };
 
   const fetchUserData = () => {
-      const data = getUserDataFromStorage() 
+    const data = getUserDataFromStorage();
 
     setUserDataState(data || undefined);
-  }
+  };
 
   useEffect(() => {
-    fetchUserData()
-  }, [])
+    fetchUserData();
+  }, []);
 
   return (
     <AppContext.Provider
       value={{
         ...state,
-        setUserDataState
+        setUserDataState,
       }}
     >
       {children}
diff --git a/src/lib/modals/modals.ts b/src/lib/modals/modals.ts
deleted file mode 100644
index fb23ebe..0000000
--- a/src/lib/modals/modals.ts
+++ /dev/null
@@ -1,7 +0,0 @@
-export interface UserData {
-  token: string;
-  name: string;
-  email: string;
-  desiredJobTitle?: string;
-  aboutMe?: string;
-}
diff --git a/src/ui/inlineSpinner/InlineSpinner.tsx b/src/ui/inlineSpinner/InlineSpinner.tsx
deleted file mode 100644
index 5e20544..0000000
--- a/src/ui/inlineSpinner/InlineSpinner.tsx
+++ /dev/null
@@ -1,14 +0,0 @@
-export interface InlineSpinnerProps {
-  size?: number;
-}
-
-const InlineSpinner = (props: InlineSpinnerProps) => {
-  return (
-    <div
-      className="inline-block border-4 border-white rounded-full border-t-blue-800 animate-spin"
-      style={{ height: `${props.size}px`, width: `${props.size}px` }}
-    />
-  );
-};
-
-export default InlineSpinner;
diff --git a/src/ui/jobItem/JobItem.tsx b/src/ui/jobItem/JobItem.tsx
index be5eac3..a5ec674 100644
--- a/src/ui/jobItem/JobItem.tsx
+++ b/src/ui/jobItem/JobItem.tsx
@@ -24,7 +24,7 @@ const JobItem = ({
   return (
     <div className="w-full max-w-[1000px] h-fit h-60 border-solid border-2 border-blue-500 rounded-md p-8">
       <div className={"flex w-full gap-[20px]"}>
-        <img src={img} alt="job-avatar" className="w-[56px] h-auto" />
+        <img src={img} alt="job-avatar" className="h-[56px] w-auto" />
         <div>
           <h2 className="text-[1.3em] font-medium">{title}</h2>
           <div className="flex gap-x-5">
@@ -34,11 +34,7 @@ const JobItem = ({
           </div>
         </div>
       </div>
-      {description.length > 300 ? (
-        <h3 className="p-10">{`${description.substring(0, 300)}...`}</h3>
-      ) : (
-        <h3 className="p-10">{description}</h3>
-      )}
+        <h3 className="p-10">{description.length > 300 ? `${description.substring(0, 300)}...` : description}</h3>
       {children}
     </div>
   );
diff --git a/src/ui/likeButton/LikeButtonContainer.tsx b/src/ui/likeButton/LikeButtonContainer.tsx
deleted file mode 100644
index a5c5321..0000000
--- a/src/ui/likeButton/LikeButtonContainer.tsx
+++ /dev/null
@@ -1,46 +0,0 @@
-"use client";
-import { JobItem } from "@/api/types";
-import LikeButton from "./LikeButton";
-import {
-  addLikedJobToStorage,
-  deleteLikedJobFromStorage,
-  getLikedJobsFromStorage,
-} from "@/lib/helpers/likeHelper";
-import { useEffect, useState } from "react";
-
-interface LikeButtonContainerProps {
-  jobInfo: JobItem;
-}
-
-const LikeButtonContainer = ({ jobInfo }: LikeButtonContainerProps) => {
-  const [isLiked, setIsLiked] = useState<boolean>(false);
-
-  useEffect(() => {
-    const jobsFromStorage = getLikedJobsFromStorage();
-    if (jobsFromStorage) {
-      console.log(jobsFromStorage);
-      const jobIndex = jobsFromStorage.findIndex(
-        (el) => el.job_id == jobInfo.job_id
-      );
-      if (jobIndex > -1) {
-        setIsLiked(true);
-      }
-    }
-  }, []);
-
-  const setLike = () => {
-    setIsLiked(true);
-    addLikedJobToStorage(jobInfo);
-  };
-
-  const deleteLike = () => {
-    setIsLiked(false);
-    deleteLikedJobFromStorage(jobInfo.job_id);
-  };
-
-  return (
-    <LikeButton isLiked={isLiked} action={isLiked ? deleteLike : setLike} />
-  );
-};
-
-export default LikeButtonContainer;
diff --git a/src/ui/likeButton/LikeIcon.tsx b/src/ui/likeButton/LikeIcon.tsx
index 7a4fea8..da364e0 100644
--- a/src/ui/likeButton/LikeIcon.tsx
+++ b/src/ui/likeButton/LikeIcon.tsx
@@ -11,14 +11,14 @@ const LikeIcon = (props: LikIconProps) => {
       width={`${props.size || 24}px`}
       height={`${props.size || 24}px`}
       viewBox="0 0 24 24"
-      fill={filled ? 'black' : 'none'}
+      fill={filled ? 'white' : 'none'}
       xmlns="http://www.w3.org/2000/svg"
     >
       <path
         fillRule="evenodd"
         clipRule="evenodd"
         d="M12 6.00019C10.2006 3.90317 7.19377 3.2551 4.93923 5.17534C2.68468 7.09558 2.36727 10.3061 4.13778 12.5772C5.60984 14.4654 10.0648 18.4479 11.5249 19.7369C11.6882 19.8811 11.7699 19.9532 11.8652 19.9815C11.9483 20.0062 12.0393 20.0062 12.1225 19.9815C12.2178 19.9532 12.2994 19.8811 12.4628 19.7369C13.9229 18.4479 18.3778 14.4654 19.8499 12.5772C21.6204 10.3061 21.3417 7.07538 19.0484 5.17534C16.7551 3.2753 13.7994 3.90317 12 6.00019Z"
-        stroke="#000000"
+        stroke="white"
         strokeWidth="2"
         strokeLinecap="round"
         strokeLinejoin="round"
diff --git a/src/ui/likeButton/likeButton.tsx b/src/ui/likeButton/likeButton.tsx
index 9597bbc..c80e837 100644
--- a/src/ui/likeButton/likeButton.tsx
+++ b/src/ui/likeButton/likeButton.tsx
@@ -8,7 +8,7 @@ interface LikeButtonProps {
 
 const LikeButton = ({ isLiked, action }: LikeButtonProps) => {
   return (
-    <button className="flex gap-1 bg-blue-500 p-1.5" onClick={action}>
+    <button className="flex gap-1 bg-blue-500 p-1.5 text-white" onClick={action}>
       <span className="">Like</span> <LikeIcon size={24} filled={isLiked} />
     </button>
   );
diff --git a/src/ui/userPreference/UserPreference.tsx b/src/ui/userPreference/UserPreference.tsx
index d4c9057..4c038d9 100644
--- a/src/ui/userPreference/UserPreference.tsx
+++ b/src/ui/userPreference/UserPreference.tsx
@@ -1,5 +1,5 @@
 import React, { useEffect, useState } from "react";
-import InlineSpinner from "../inlineSpinner/InlineSpinner";
+import InlineSpinner from "../spinner/InlineSpinner";
 
 interface UserPreferenceProps {
   title: string;
